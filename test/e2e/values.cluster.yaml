# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Default values for banyandb.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: ghcr.io/apache/skywalking-banyandb
  tag: 552248704797a97decf505c3e53bb6fa1c58fb4e
  pullPolicy: IfNotPresent

cluster:
  enabled: true
  etcdEndpoints: []
  liaison:
    replicas: 1
    podAnnotations:
      example: banyandb-foo
    securityContext: {}
    # runAsUser: 1000
    # runAsGroup: 1000
    # fsGroup: 1000
    env: []
    # - name: BANYANDB_FOO
    #   value: "bar"
    priorityClassName: ""
    podDisruptionBudget: {}
    updateStrategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 1
    podManagementPolicy: Parallel
    # minAvailable: 1
    # maxUnavailable: 2
    # matchLabels:
    #   - key: foo
    #     value: bar
    # matchExpressions:
    #   - key: foo
    #     operator: In
    #     values: [bar, baz]
    # paused: false
    tolerations: []
    # - key: foo
    #   value: bar
    #   operator: Equal
    #   effect: NoSchedule
    nodeSelector: []
    # - key: foo
    #   value: bar
    affinity: {}
    # nodeAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     nodeSelectorTerms:
    #       - matchExpressions:
    #           - key: foo
    #             operator: In
    #             values:
    #               - bar
    #               - baz
    # podAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     - labelSelector:
    #         matchLabels:
    #           - key: app
    #             value: banyandb
    #       topologyKey: "kubernetes.io/hostname"
    #       namespaces: []
    podAffinityPreset: ""
    podAntiAffinityPreset: soft
    resources:
      requests: []
      # - key: cpu
      #   value: "100m"
      # - key: memory
      #   value: "256Mi"
      limits: []
      # - key: cpu
      #   value: "500m"
      # - key: memory
      #   value: "512Mi"
      # tls:
      #   grpcSecretName: ""
      #   httpSecretName: ""
      #   etcdSecretName: ""

    grpcSvc:
      labels: {}
      annotations: {}
      port: 17912

    httpSvc:
      labels: {}
      annotations: {}
      port: 17913
      type: LoadBalancer
      externalIPs: []
      loadBalancerIP: null
      loadBalancerSourceRanges: []

    ingress:
      enabled: false
      labels: {}
      annotations: {}
      rules: []
      # - host: localhost
      #   paths:
      #     - path: /
      #       port: 17913
      #       serviceName: banyandb-http
      tls: []
      # - hosts:
      #     - localhost
      #   secretName: tls-secret

    livenessProbe:
      initialDelaySeconds: 20
      periodSeconds: 5
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 60

    readinessProbe:
      initialDelaySeconds: 20
      periodSeconds: 5
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 60

    startupProbe:
      initialDelaySeconds: 0
      periodSeconds: 5
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 60

  data:
    nodeTemplate:
      replicas: 1
      podAnnotations:
        example: banyandb-foo
      securityContext: {}
      # runAsUser: 1000
      # runAsGroup: 1000
      # fsGroup: 1000
      env: []
      # - name: BANYANDB_FOO
      #   value: "bar"
      priorityClassName: ""
      podDisruptionBudget:
        maxUnavailable: 1
      # minAvailable: 1
      # maxUnavailable: 2
      # matchLabels:
      #   - key: foo
      #     value: bar
      # matchExpressions:
      #   - key: foo
      #     operator: In
      #     values: [bar, baz]
      # paused: false
      tolerations: []
      # - key: foo
      #   value: bar
      #   operator: Equal
      #   effect: NoSchedule
      nodeSelector: []
      # - key: foo
      #   value: bar
      affinity: {}
      # nodeAffinity:
      #   requiredDuringSchedulingIgnoredDuringExecution:
      #     nodeSelectorTerms:
      #       - matchExpressions:
      #           - key: foo
      #             operator: In
      #             values:
      #               - bar
      #               - baz
      # podAffinity:
      #   requiredDuringSchedulingIgnoredDuringExecution:
      #     - labelSelector:
      #         matchLabels:
      #           - key: app
      #             value: banyandb
      #       topologyKey: "kubernetes.io/hostname"
      #       namespaces: []
      podAffinityPreset: ""
      podAntiAffinityPreset: soft
      resources:
        requests: []
        # - key: cpu
        #   value: "100m"
        # - key: memory
        #   value: "256Mi"
        limits: []
        # - key: cpu
        #   value: "500m"
        # - key: memory
        #   value: "512Mi"
        # tls:
        #   grpcSecretName: ""
        #   etcdSecretName: ""

      grpcSvc:
        labels: {}
        annotations: {}
        port: 17912

      sidecar: []
      # - name: cleanup-sidecar
      #   image: busybox:latest
      #   imagePullPolicy: IfNotPresent
      #   commands: 
      #     normal: ["sh", "-c", "while true; do echo 'sidecar task'; sleep 60; done"]
      #     preStop: ["sh", "-c", "echo cleanup"]
      backupSidecar:
        enabled: true 
        dest: "file:///tmp/backups/data-$(ORDINAL_NUMBER)"
        timeStyle: "daily"
        schedule: "@every 10s"
        resources: {}
      restoreInitContainer:
        enabled: true
        resources: {}
      livenessProbe:
        initialDelaySeconds: 20
        periodSeconds: 5
        timeoutSeconds: 5
        successThreshold: 1
        failureThreshold: 60

      readinessProbe:
        initialDelaySeconds: 20
        periodSeconds: 5
        timeoutSeconds: 5
        successThreshold: 1
        failureThreshold: 60

      startupProbe:
        initialDelaySeconds: 0
        periodSeconds: 5
        timeoutSeconds: 5
        successThreshold: 1
        failureThreshold: 60
    roles:
      hot: {}
  ui:
    # Available UI type: 
    # None: Disable UI
    # Standalone: Standalone UI deployment
    # Embedded: Embedded UI in Liaison
    type: Embedded
    standalone:
      replicas: 1
      podAnnotations:
      # example: banyandb-foo
      securityContext: {}
      # runAsUser: 1000
      # runAsGroup: 1000
      # fsGroup: 1000
      env: []
      # - name: BANYANDB_FOO
      #   value: "bar"
      priorityClassName: ""
      updateStrategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      podDisruptionBudget: {}
      #  minAvailable: 1
      # maxUnavailable: 2
      # paused: false
      tolerations: []
      # - key: foo
      #   value: bar
      #   operator: Equal
      #   effect: NoSchedule
      nodeSelector: []
      # - key: foo
      #   value: bar
      affinity: {}
      # nodeAffinity:
      #   requiredDuringSchedulingIgnoredDuringExecution:
      #     nodeSelectorTerms:
      #       - matchExpressions:
      #           - key: foo
      #             operator: In
      #             values:
      #               - bar
      #               - baz
      # podAffinity:
      #   requiredDuringSchedulingIgnoredDuringExecution:
      #     - labelSelector:
      #         matchLabels:
      #           - key: app
      #             value: banyandb
      #       topologyKey: "kubernetes.io/hostname"
      #       namespaces: []
      podAffinityPreset: ""
      podAntiAffinityPreset: soft
      resources:
        requests: []
        # - key: cpu
        #   value: "100m"
        # - key: memory
        #   value: "256Mi"
        limits: []
        # - key: cpu
        #   value: "500m"
        # - key: memory
        #   value: "512Mi"
      # tls:
      # grpcSecretName: ""
      # httpSecretName: ""
      # etcdSecretName: ""

      httpSvc:
        labels: {}
        annotations: {}
        port: 17913
        type: LoadBalancer
        externalIPs: []
        loadBalancerIP: null
        loadBalancerSourceRanges: []

      ingress:
        enabled: false
        labels: {}
        annotations: {}
        rules: []
        # - host: localhost
        #   paths:
        #     - path: /
        #       port: 17913
        #       serviceName: banyandb-ui
        tls: []
        # - hosts:
        #     - localhost
        #   secretName: tls-secret
      livenessProbe:
        initialDelaySeconds: 20
        periodSeconds: 30
        timeoutSeconds: 5
        successThreshold: 1
        failureThreshold: 5

      readinessProbe:
        initialDelaySeconds: 20
        periodSeconds: 30
        timeoutSeconds: 5
        successThreshold: 1
        failureThreshold: 5

      startupProbe:
        initialDelaySeconds: 0
        periodSeconds: 5
        timeoutSeconds: 5
        successThreshold: 1
        failureThreshold: 60

storage:
  data:
    enabled: false
    persistentVolumeClaims:
    - mountTargets: [ "measure", "stream", "property" ]
      nodeRole: hot
      existingClaimName: null
      claimName: data
      size: 5Gi
      accessModes:
      - ReadWriteOnce
      storageClass: null
      volumeMode: Filesystem
    - mountTargets: [ "backups" ]
      nodeRole: hot
      existingClaimName: null
      claimName: backups
      size: 5Gi
      accessModes:
      - ReadWriteOnce
      storageClass: null
      volumeMode: Filesystem
  liaison:
    enabled: false
    persistentVolumeClaims:
    - mountTargets: [ "measure", "stream" ]
      claimName: liaison-data
      size: 10Gi
      accessModes:
      - ReadWriteOnce
      storageClass: null
      volumeMode: Filesystem
  standalone:
    enabled: false
    persistentVolumeClaims:
    - mountTargets: [ "measure", "stream", "property" ]
      claimName: standalone-data
      size: 200Gi
      accessModes:
      - ReadWriteOnce
      storageClass: null
      volumeMode: Filesystem

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

etcd:
  enabled: true
  replicaCount: 1
  auth:
    rbac:
      create: true
      allowNoneAuthentication: false
      rootPassword: banyandb
    client:
      secureTransport: false
      existingSecret: ""
      enableAuthentication: false
      certFilename: tls.crt
      certKeyFilename: tls.key
      caFilename: ""
      # extraEnvVars:
      #   - name: ETCDCTL_CACERT
      #     value: /opt/bitnami/etcd/certs/client/ca.crt
    token:
      enabled: true
      type: simple

fullnameOverride: ""
nameOverride: "banyandb"
