# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Default values for banyandb.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

cluster:
  enabled: true
  image:
    repository: docker.io/apache/skywalking-banyandb
    tag: 0.6.0
    pullPolicy: IfNotPresent
  etcdEndpoints: []
  liaison:
    name: banyandb
    role: liaison
    replicas: 1
    podAnnotations: 
      example: banyandb-foo
    securityContext: {}
      # runAsUser: 1000
      # runAsGroup: 1000
      # fsGroup: 1000
    env: []
      # - name: BANYANDB_FOO
      #   value: "bar"
    priorityClassName: ""
    podDisruptionBudget: {}
      # minAvailable: 1
      # maxUnavailable: 2
      # matchLabels:
      #   - key: foo
      #     value: bar
      # matchExpressions:
      #   - key: foo
      #     operator: In
      #     values: [bar, baz]
      # paused: false
    tolerations: []
      # - key: foo
      #   value: bar
      #   operator: Equal
      #   effect: NoSchedule
    nodeSelector: []
      # - key: foo
      #   value: bar
    affinity: {}
      # nodeAffinity:
      #   requiredDuringSchedulingIgnoredDuringExecution:
      #     nodeSelectorTerms:
      #       - matchExpressions:
      #           - key: foo
      #             operator: In
      #             values:
      #               - bar
      #               - baz
      # podAffinity:
      #   requiredDuringSchedulingIgnoredDuringExecution:
      #     - labelSelector:
      #         matchLabels:
      #           - key: app
      #             value: banyandb
      #       topologyKey: "kubernetes.io/hostname"
      #       namespaces: []
    resources:
      requests: []
        # - key: cpu
        #   value: "100m"
        # - key: memory
        #   value: "256Mi"
      limits: []
        # - key: cpu
        #   value: "500m"
        # - key: memory
        #   value: "512Mi"
    # tls:
    #   grpcSecretName: ""
    #   httpSecretName: ""
    #   etcdSecretName: ""

    grpcSvc:
      labels: {}
      annotations: {}
      port: 17912

    httpSvc:
      labels: {}
      annotations: {}
      port: 17913
      type: LoadBalancer
      externalIPs: []
      loadBalancerIP: null
      loadBalancerSourceRanges: []

    ingress:
      enabled: false
      labels: {}
      annotations: {}
      rules: []
        # - host: localhost
        #   paths:
        #     - path: /
        #       port: 17913
        #       serviceName: banyandb-http
      tls: []
        # - hosts:
        #     - localhost
        #   secretName: tls-secret

  data:
    name: banyandb
    role: data
    replicas: 1
    podAnnotations: 
      example: banyandb-foo
    securityContext: {}
      # runAsUser: 1000
      # runAsGroup: 1000
      # fsGroup: 1000
    env: []
      # - name: BANYANDB_FOO
      #   value: "bar"
    priorityClassName: ""
    podDisruptionBudget: {}
      # minAvailable: 1
      # maxUnavailable: 2
      # matchLabels:
      #   - key: foo
      #     value: bar
      # matchExpressions:
      #   - key: foo
      #     operator: In
      #     values: [bar, baz]
      # paused: false
    tolerations: []
      # - key: foo
      #   value: bar
      #   operator: Equal
      #   effect: NoSchedule
    nodeSelector: []
      # - key: foo
      #   value: bar
    affinity: {}
      # nodeAffinity:
      #   requiredDuringSchedulingIgnoredDuringExecution:
      #     nodeSelectorTerms:
      #       - matchExpressions:
      #           - key: foo
      #             operator: In
      #             values:
      #               - bar
      #               - baz
      # podAffinity:
      #   requiredDuringSchedulingIgnoredDuringExecution:
      #     - labelSelector:
      #         matchLabels:
      #           - key: app
      #             value: banyandb
      #       topologyKey: "kubernetes.io/hostname"
      #       namespaces: []
    resources:
      requests: []
        # - key: cpu
        #   value: "100m"
        # - key: memory
        #   value: "256Mi"
      limits: []
        # - key: cpu
        #   value: "500m"
        # - key: memory
        #   value: "512Mi"
    # tls:
    #   grpcSecretName: ""
    #   etcdSecretName: ""

    grpcSvc:
      labels: {}
      annotations: {}
      port: 17912

    sidecar: []
      # - name: cleanup-sidecar
      #   image: busybox:latest
      #   imagePullPolicy: IfNotPresent
      #   commands: 
      #     normal: ["sh", "-c", "while true; do echo 'sidecar task'; sleep 60; done"]
      #     preStop: ["sh", "-c", "echo cleanup"]
        
storage:
  enabled: false
  persistentVolumeClaims:
    - mountTargets: ["measure", "stream"]
      existingClaimName: null
      claimName: data
      size: 200Gi
      accessModes:
        - ReadWriteOnce
      storageClass: null
      volumeMode: Filesystem
    - mountTargets: ["metadata"]
      existingClaimName: null
      claimName: meta
      size: 10Gi
      accessModes:
        - ReadWriteOnce
      storageClass: null
      volumeMode: Filesystem

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

etcd:
  enabled: true
  replicaCount: 1
  auth:
    rbac:
      create: true
      allowNoneAuthentication: false
      rootPassword: banyandb 
    client:
      secureTransport: false
      existingSecret: ""
      enableAuthentication: false
      certFilename: tls.crt
      certKeyFilename: tls.key
      caFilename: ""
  # extraEnvVars:
  #   - name: ETCDCTL_CACERT
  #     value: /opt/bitnami/etcd/certs/client/ca.crt

fullnameOverride: "banyandb"
